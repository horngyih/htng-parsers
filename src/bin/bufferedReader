#! /usr/bin/env node

const fs = require("fs");
const rl = require("readline");

function loadLog(filename){
    console.log( "Load : ", filename );
    return new Promise( (resolve,reject)=>{
        try{
            let lines = [];
            rl.createInterface({input: fs.createReadStream(filename)})
            .on("line", line=>lines.push(line))
            .on("close", ()=>resolve(lines));
        } catch(err){
            reject(err);
        }
    });
}

function bufferedReader(startPattern){
    PATTERN = (startPattern instanceof RegExp )? startPattern : /./;
    return (state, line)=>{
        state = state || { blocks : [], current : [] };
        let blocks = state.blocks || [];
        let current = state.current || [];

        function newBlock(){
            if( current && current.length > 0 ){
                blocks.push(current);
                current = [];
            }
        }

        if( line.match(startPattern) ){
            newBlock();
        }
        current.push(line);

        return Object.assign({}, { blocks : blocks }, {current : current});
    };
}

function collate(lines){
    let reader = bufferedReader(/INFO|ERROR/);
    return lines.reduce(reader,{});
}

let args = process.argv.slice(2);

loadLog(args[0])
.then(collate)
.then(lines=>{
    console.log( lines.blocks.join("\n") );
})
.catch(console.log);
